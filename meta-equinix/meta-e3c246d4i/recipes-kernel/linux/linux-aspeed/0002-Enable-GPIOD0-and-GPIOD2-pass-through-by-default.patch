From b34fdedc21c98db698150d5014e12927a017b07f Mon Sep 17 00:00:00 2001
From: "Jason M. Bills" <jason.m.bills@linux.intel.com>
Date: Mon, 6 May 2019 14:18:27 -0700
Subject: [PATCH] Enable GPIOD0 and GPIOD2 pass-through by default

This change sets the gpio DT pinctrl default configuration to
enable GPIOD0 and GPIOD2 pass-through.  Since this causes
pinctrl_get_select_default() to be called automatically for
the gpio driver to claim the GPIO pins in those groups, we
also need to call pinctrl_put() to release claim on the
pass-through GPIOs so they can be requested at runtime.

Tested:
Disabled pass-through in uboot and confirmed that after booting
Linux, pass-through is enabled and 'cat /sys/kernel/debug/pinctrl/
1e6e2000.syscon\:pinctrl-aspeed-g5-pinctrl/pinmux-pins' shows that
the pass-through GPIOs are UNCLAIMED.

Signed-off-by: Jason M. Bills <jason.m.bills@linux.intel.com>
Hacked-for-GPIOD-instead-of-GPIOE-by: Zev Weiss <zweiss@equinix.com>
---
 drivers/gpio/gpio-aspeed.c                     | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/gpio/gpio-aspeed.c b/drivers/gpio/gpio-aspeed.c
index 09e53c5..6165b44 100644
--- a/drivers/gpio/gpio-aspeed.c
+++ b/drivers/gpio/gpio-aspeed.c
@@ -1140,6 +1140,7 @@ static int __init aspeed_gpio_probe(struct platform_device *pdev)
 {
 	const struct of_device_id *gpio_id;
 	struct aspeed_gpio *gpio;
+	struct pinctrl *pinctrl;
 	int rc, i, banks, err;
 	u32 ngpio;
 
@@ -1190,6 +1191,15 @@ static int __init aspeed_gpio_probe(struct platform_device *pdev)
 		return -ENOMEM;
 
 	/*
+	 * Select the pass-through pinctrl config to enable the pass-through
+	 * mux for GPIOs marked as pass-through. Then call pinctrl_put() to
+	 * release claim of the GPIO pins, so they can be requested at runtime.
+	 */
+	pinctrl = pinctrl_get_select(&pdev->dev, "pass-through");
+	if (!IS_ERR(pinctrl))
+		pinctrl_put(pinctrl);
+
+	/*
 	 * Populate it with initial values read from the HW and switch
 	 * all command sources to the ARM by default
 	 */
-- 
2.7.4

